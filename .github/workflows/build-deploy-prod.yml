name: Publish Docker image

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.release_version.outputs.VERSION }}
    steps:

      - uses: actions/checkout@master
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      -
        name: Check out the repo
        uses: actions/checkout@v3
      -
        name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - 
        name: Get development release version
        id: release_version
        run: echo ::set-output name=VERSION::$(date +'%Y.%m.%d.${{ github.run_number }}')

      - 
        name: Build and push docker image
        run: |
          docker build -t yodo1/chatgpt-next-web:${{ steps.release_version.outputs.VERSION }} .
          docker push "yodo1/chatgpt-next-web:${{ steps.release_version.outputs.VERSION }}"
      
  
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: build
    steps:
      - uses: actions/checkout@v2

      - name: AWS Configure
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_MAS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_MAS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Deploy-API
        uses: koslibpro/helm-eks-action@v1.5.0
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBECONFIG_MAS_PROD_AP_EAST_1 }}
          CHART_NAME: chatgpt-next-web
        with:
          command: |-
            helm upgrade "${CHART_NAME}" \
              --debug \
              --atomic \
              --install \
              --values="k8s/${CHART_NAME}/values.yaml" \
              --namespace=yodo1-ai \
              --set image.tag="${{ needs.build.outputs.VERSION }}" \
              "k8s/${CHART_NAME}"
            
